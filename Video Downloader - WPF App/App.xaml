<Application x:Class="VDownloader.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <!--#region SVG Icons -->
        <Geometry x:Key="Downloading_Icon">M1.5,17.49 v2.72c0,1.47,0,2.2,0.46,2.65 0.46,0.46,1.19,0.46,2.65,0.46 h5.49c0.54,0,0.81,0,1.02,0.15 0.2,0.15,0.29,0.4,0.46,0.92 l1.24,3.7c0.17,0.51,0.26,0.77,0.46,0.92 0.2,0.15,0.47,0.15,1.02,0.15 h9.42c0.54,0,0.81,0,1.02-0.15 0.2-0.15,0.29-0.4,0.46-0.92 l1.24-3.7c0.17-0.51,0.26-0.77,0.46-0.92 0.2-0.15,0.47-0.15,1.02-0.15 h5.49 c1.47,0,2.2,0,2.65-0.46 0.46-0.46,0.46-1.19,0.46-2.65 v-2.72 M26.77,13.61 l-7.77,5.83-7.77-5.83 m7.77,5.83 V0 M26.77,5.83 h6.61c1.47,0,2.2,0,2.65,0.46 0.46,0.46,0.46,1.19,0.46,2.65 v24.88c0,1.47,0,2.2-0.46,2.65 -0.46,0.46-1.19,0.46-2.65,0.46 H4.61c-1.47,0-2.2,0-2.65-0.46 -0.46-0.46-0.46-1.19-0.46-2.65 V8.94c0-1.47,0-2.2,0.46-2.65 0.46-0.46,1.19-0.46,2.65-0.46 h6.61</Geometry>
        <Geometry x:Key="Downloaded_Icon">M21.93,1.5H11.5c-4.71,0-7.07,0-8.54,1.46-1.46,1.46-1.46,3.82-1.46,8.54v25c0,4.71,0,7.07,1.46,8.54,1.46,1.46,3.82,1.46,8.54,1.46h15c4.71,0,7.07,0,8.54-1.46,1.46-1.46,1.46-3.82,1.46-8.54V16.07c0-1.02,0-1.53-.19-1.99s-.55-.82-1.27-1.54L25.46,2.96c-.72-.72-1.08-1.08-1.54-1.27-.46-.19-.97-.19-1.99-.19 ZM23.64,29.2l-7.96-3.41c-1.98-.85-4.18,.6-4.18,2.76v5.9c0,2.15,2.2,3.61,4.18,2.76l7.96-3.41c2.02-.87,2.02-3.73,0-4.6 ZM21.5,1.5V11.5c0,2.36,0,3.54,.73,4.27,.73,.73,1.91,.73,4.27,.73h10</Geometry>
        <Geometry x:Key="Converting_Icon">M25.81,18.29 L34.42,9.67 25.81,1.06 M2.12,13.12 V20.44 M34.42,9.67 H5.57c-1.9,0-3.44,1.54-3.44,3.44 M10.73,28.84 L2.12,37.45 10.73,46.06 M34.42,34 V26.68 M2.12,37.45 H30.97c1.9,0,3.44-1.54,3.44-3.44</Geometry>
        <Geometry x:Key="Converted_Icon">M21.93,1.5H11.5c-4.71,0-7.07,0-8.54,1.46-1.46,1.46-1.46,3.82-1.46,8.54v25c0,4.71,0,7.07,1.46,8.54,1.46,1.46,3.82,1.46,8.54,1.46h15c4.71,0,7.07,0,8.54-1.46,1.46-1.46,1.46-3.82,1.46-8.54V16.07c0-1.02,0-1.53-.19-1.99s-.55-.82-1.27-1.54L25.46,2.96c-.72-.72-1.08-1.08-1.54-1.27-.46-.19-.97-.19-1.99-.19Z M21.5,1.5V11.5c0,2.36,0,3.54,.73,4.27,.73,.73,1.91,.73,4.27,.73h10 M22.21,30.3 L25.87,26.64 22.21,22.97 M12.13,28.1 V31.22 M25.87,26.64 H13.59c-.8,0-1.46,.66-1.46,1.46 M15.79,34.8 L12.13,38.46 15.79,42.13 M25.87,37 V33.88 M12.13,38.46 H24.41c.8,0,1.46-.66,1.46-1.46</Geometry>

        <Geometry x:Key="Settings_Icon">M11.9838 0.541611C12.0711 0.710929 12.0928 0.927766 12.1361 1.36144C12.2182 2.1823 12.2593 2.59274 12.4311 2.81793C12.649 3.10358 13.0034 3.25038 13.3595 3.20248C13.6402 3.16472 13.9594 2.90352 14.5979 2.38113C14.9352 2.10515 15.1038 1.96716 15.2853 1.90918C15.5158 1.83555 15.7652 1.84798 15.9872 1.94419C16.162 2.01994 16.3161 2.17402 16.6243 2.4822L17.5178 3.37567C17.8259 3.68385 17.98 3.83794 18.0558 4.01275C18.152 4.23478 18.1644 4.48415 18.0908 4.71464C18.0328 4.89612 17.8948 5.06478 17.6188 5.4021C17.0964 6.0406 16.8352 6.35984 16.7975 6.64056C16.7496 6.99662 16.8964 7.35102 17.182 7.56893C17.4072 7.74072 17.8176 7.78176 18.6385 7.86385C19.0722 7.90722 19.2891 7.92891 19.4584 8.01624C19.6734 8.12716 19.841 8.31228 19.9299 8.53729C20 8.71447 20 8.93239 20 9.36824V10.6319C20 11.0676 20 11.2855 19.93 11.4626C19.841 11.6877 19.6734 11.8729 19.4583 11.9838C19.289 12.0711 19.0722 12.0928 18.6386 12.1361L18.6386 12.1361C17.818 12.2182 17.4077 12.2592 17.1825 12.4309C16.8967 12.6489 16.7499 13.0034 16.7979 13.3596C16.8357 13.6402 17.0968 13.9593 17.619 14.5976C17.8949 14.9348 18.0328 15.1034 18.0908 15.2848C18.1645 15.5154 18.152 15.7648 18.0558 15.9869C17.98 16.1617 17.826 16.3157 17.5179 16.6238L16.6243 17.5174C16.3162 17.8255 16.1621 17.9796 15.9873 18.0554C15.7652 18.1516 15.5159 18.164 15.2854 18.0904C15.1039 18.0324 14.9352 17.8944 14.5979 17.6184L14.5979 17.6184C13.9594 17.096 13.6402 16.8348 13.3595 16.7971C13.0034 16.7492 12.649 16.896 12.4311 17.1816C12.2593 17.4068 12.2183 17.8173 12.1362 18.6383C12.0928 19.0722 12.0711 19.2891 11.9837 19.4585C11.8728 19.6735 11.6877 19.8409 11.4628 19.9299C11.2856 20 11.0676 20 10.6316 20H9.36824C8.93239 20 8.71447 20 8.53729 19.9299C8.31228 19.841 8.12716 19.6734 8.01624 19.4584C7.92891 19.2891 7.90722 19.0722 7.86385 18.6385C7.78176 17.8176 7.74072 17.4072 7.56892 17.182C7.35101 16.8964 6.99663 16.7496 6.64057 16.7975C6.35985 16.8352 6.04059 17.0964 5.40208 17.6189L5.40206 17.6189C5.06473 17.8949 4.89607 18.0329 4.71458 18.0908C4.4841 18.1645 4.23474 18.152 4.01272 18.0558C3.8379 17.9801 3.6838 17.826 3.37561 17.5178L2.48217 16.6243C2.17398 16.3162 2.01988 16.1621 1.94414 15.9873C1.84794 15.7652 1.8355 15.5159 1.90913 15.2854C1.96711 15.1039 2.10511 14.9352 2.3811 14.5979C2.90351 13.9594 3.16471 13.6402 3.20247 13.3594C3.25037 13.0034 3.10357 12.649 2.81792 12.4311C2.59273 12.2593 2.1823 12.2182 1.36143 12.1361C0.927764 12.0928 0.71093 12.0711 0.541612 11.9838C0.326558 11.8728 0.159016 11.6877 0.0700471 11.4627C0 11.2855 0 11.0676 0 10.6318V9.36835C0 8.9324 0 8.71442 0 8.53721C0.0700841 8.31226 0.326541 8.12719 0.541523 8.01628C0.710878 7.92891 0.927769 7.90722 1.36155 7.86384H1.36155H1.36156C2.18264 7.78173 2.59319 7.74068 2.81842 7.56881C3.10395 7.35092 3.2507 6.99664 3.20287 6.64066C3.16514 6.35987 2.90385 6.04052 2.38128 5.40182C2.10516 5.06435 1.96711 4.89561 1.90914 4.71405C1.83557 4.48364 1.848 4.23438 1.94413 4.01243C2.01988 3.83754 2.17403 3.68339 2.48233 3.37509L3.37565 2.48177L3.37566 2.48177C3.68385 2.17357 3.83795 2.01947 4.01277 1.94373C4.23478 1.84753 4.48414 1.8351 4.71463 1.90872C4.89612 1.9667 5.06481 2.10472 5.4022 2.38076C6.04061 2.9031 6.35982 3.16427 6.64044 3.20207C6.99661 3.25003 7.35113 3.10319 7.56907 2.81742C7.74077 2.59227 7.78181 2.18195 7.86387 1.36131C7.90722 0.927757 7.9289 0.710983 8.01619 0.541704C8.12712 0.326575 8.31231 0.158981 8.53741 0.0700092C8.71453 0 8.93238 0 9.3681 0H10.6318C11.0676 0 11.2855 0 11.4627 0.0700478C11.6877 0.159016 11.8728 0.326558 11.9838 0.541611ZM10 14C12.2091 14 14 12.2091 14 10C14 7.79086 12.2091 6 10 6C7.79086 6 6 7.79086 6 10C6 12.2091 7.79086 14 10 14Z</Geometry>
        <Geometry x:Key="Menu_Icon">M0,72 90,72 90,58.5 0,58.5 M0,13.5 90,13.5 90,0 0,0 M0,42.75 90,42.75 90,29.25 0,29.25</Geometry>
        <Geometry x:Key="Minimize_Icon">M0,0 L90,0 L90,13.5 L0,13.5 Z</Geometry>
        <Geometry x:Key="Maximize1_Icon">M0,0V72H90V0H0ZM76.5,58.5H13.5V13.5h63V58.5Z</Geometry>
        <Geometry x:Key="Maximize2_Icon">M18,0V18H0v54H72v-18h18V0H18ZM58.5,58.5H13.5V31.5H58.5v27Zm18-18h-4.5V18H31.5v-4.5h45v27Z</Geometry>
        <Geometry x:Key="Close_Icon">M63.64,0 36.59,27.05 9.55,0 0,9.55 27.05,36.59 0,63.64 9.55,73.19 36.59,46.14 63.64,73.19 73.19,63.64 46.14,36.59 73.19,9.55 63.64,0</Geometry>
        <!--#endregion-->

        <!--#region Color Definitions -->
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>

        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#E0EEF9"/> 
        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="#E0F4F3"/> 
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#0078D4"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="#A8D3D1"/>
        
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="#FF2C628B"/>
        
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

        <SolidColorBrush x:Key="ButtonLeft.MouseOver.Background" Color="#40A29D"/>
        <SolidColorBrush x:Key="ButtonLeft.Checked" Color="#38908B"/>
        
        <SolidColorBrush x:Key="Icon.Grey" Color="#353535"/>
        <SolidColorBrush x:Key="Icon.Green" Color="#38908B"/>
        <!--#endregion-->

        <Style x:Key="ViewboxStyle_TopButtons" TargetType="Viewbox">
            <Setter Property="Width" Value="15"/>
            <Setter Property="Height" Value="12"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
        </Style>
        
        <Style x:Key="Top_Settings_Button_Style" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Top"/>


            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <Viewbox Width="18" Height="18">
                                <Path x:Name="Top_Settings_Button_Path" Style="{DynamicResource PathStyleWindowButtons}" Data="{StaticResource Settings_Icon}"/>
                            </Viewbox>
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Top_Settings_Button_Path" Property="Fill" Value="#505050"/>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Top_Settings_Button_Path" Property="Fill" Value="#353535"/>
                            </Trigger>

                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="Top_Settings_Button_Path" Property="Fill" Value="#353535"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Top_Panel_Style" TargetType="Border">
            <Setter Property="Background" Value="#F0F0F0"/>
            <Setter Property="BorderBrush" Value="#A9A9A9"/>
            <Setter Property="BorderThickness" Value="0,0,0,2"/>
        </Style>
            
        <Style x:Key="ButtonRoundedStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#FFFDFDFD"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Margin" Value="-5 10 10 0"/>


            <Setter Property="BorderBrush" Value="#d0d0d0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        
        
        
        
        
        
        
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Border" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="#606060"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Thumb" Color="#CDCDCD"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Background" Color="#DADADA"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Border" Color="#DADADA"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph" Color="#000000"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb" Color="#858585"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="#858585"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="#858585"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb" Color="#858585"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Background" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Border" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Glyph" Color="#BFBFBF"/>
        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="border" Background="{StaticResource ScrollBar.Static.Background}" BorderBrush="{StaticResource ScrollBar.Static.Border}" BorderThickness="1" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle x:Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="3"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle x:Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarStyle" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1,0"/>
            <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                <RowDefinition Height="0.00001*"/>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            </Grid.RowDefinitions>
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Row="1"/>
                            <RepeatButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                <Path x:Name="ArrowTop" Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform"/>
                            </RepeatButton>
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumbVertical}"/>
                                </Track.Thumb>
                            </Track>
                            <RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButton}">
                                <Path x:Name="ArrowBottom" Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform"/>
                            </RepeatButton>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="BorderThickness" Value="0,1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                        <ColumnDefinition Width="0.00001*"/>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    </Grid.ColumnDefinitions>
                                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1"/>
                                    <RepeatButton x:Name="PART_LineLeftButton" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowLeft" Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform"/>
                                    </RepeatButton>
                                    <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumbHorizontal}"/>
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton x:Name="PART_LineRightButton" Command="{x:Static ScrollBar.LineRightCommand}" Grid.Column="2" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowRight" Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform"/>
                                    </RepeatButton>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                    </MultiDataTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                        <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        
        
        
        
        <Style x:Key="Main_App_Button_Style" TargetType="Button" BasedOn="{StaticResource ButtonRoundedStyle}">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="0 0 10 0"/>
            <Setter Property="Foreground" Value="{StaticResource Icon.Green}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border2}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="PathStyleWindowButtons" TargetType="{x:Type Path}">
            <Setter Property="Fill" Value="#353535"/>

            <!--#region Styl Przycisku Maximize do zmiany ikony po zmianie stanu okna -->

            <!-- Ustawienie Domyślnej ikony --> 
            <Setter Property="Data" Value="{StaticResource Maximize1_Icon}" /> 
            
            <Style.Triggers>
                <!-- Monitorowanie wartość właściwości WindowState okna nadrzędnego AncestorType=Window -->
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowState}" Value="Maximized">
                    <!--Zmiana ikony na drugą-->
                    <Setter Property="Data" Value="{StaticResource Maximize2_Icon}" />
                </DataTrigger>
            </Style.Triggers>
            <!--#endregion-->
        </Style>

        <Style x:Key="ViewboxStyle_LeftButtons" TargetType="Viewbox">
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        
        <Style x:Key="leftButtons" TargetType="RadioButton">
            <Setter Property="Background" Value="#68B3B3"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Width" Value="auto"/>
            <Setter Property="Height" Value="90"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="SemiBold"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border x:Name="border" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonLeft.MouseOver.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonLeft.Checked}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonLeft.Checked}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonLeft.Checked}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LeftIconsStyle" TargetType="Path">
            <Setter Property="Width" Value="38"/>
            <Setter Property="Height" Value="48"/>
            <Setter Property="Stroke" Value="White"/>
            <Setter Property="StrokeThickness" Value="3"/>
        </Style>

        <DataTemplate x:Key="DataGrid_ListElementTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Video Thumbnail -->
                <Border BorderBrush="#D7D7D7" BorderThickness="1" Margin="20">
                    <Rectangle Width="100" Height="60">
                        <Rectangle.Fill>
                            <ImageBrush ImageSource="{Binding Thumbnail}"/>
                        </Rectangle.Fill>
                        <Rectangle.Effect>
                            <BlurEffect Radius="2"/>
                        </Rectangle.Effect>
                    </Rectangle>
                </Border>

                <TextBlock Grid.Column="1" Text="{Binding Title}" VerticalAlignment="Top" Margin="0 20 0 0"/>

                <StackPanel Grid.Column="1" Orientation="Vertical" VerticalAlignment="Bottom">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Progress}" VerticalAlignment="Bottom" />
                        <TextBlock Text="30.0MB/s of 140.0MB   " VerticalAlignment="Bottom" FontSize="12" Foreground="Gray"/>
                        <TextBlock Text="{Binding Status}" VerticalAlignment="Bottom" FontSize="12" Foreground="Gray"/>
                    </StackPanel>
                    <ProgressBar Value="{Binding DownloadProgress}" Height="5" Margin="0 0 0 20"/>

                </StackPanel>
                <!-- Przycisk -->
                <Button x:Name="ActionButton" Style="{DynamicResource Main_App_Button_Style}" Click="ActionButton_Click"  VerticalAlignment="Center" Margin="20" Grid.Column="2">
                    <Icon:PackIconMaterial Kind="Restore" Width="20" Height="20"/>
                </Button>
            </Grid>
        </DataTemplate>
        
        <SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}" Color="Transparent"/>

        <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
                            <Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="HeadersVisibility" Value="None"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="True"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="CanUserReorderColumns" Value="False"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="GridLinesVisibility" Value="None"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.Column="0"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="1" Style="{DynamicResource ScrollBarStyle}" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="10"/>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Margin" Value="15 0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="0" SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#region Progress Bar -->

        <!-- https://learn.microsoft.com/en-us/dotnet/desktop/wpf/controls/progressbar-styles-and-templates?view=netframeworkdesktop-4.8 -->

        <Style x:Key="{x:Type ProgressBar}" TargetType="{x:Type ProgressBar}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid MinHeight="14" MinWidth="200" Background="{TemplateBinding Background}">
                            
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    
                                    <VisualState x:Name="Determinate" />
                                    
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                 Storyboard.TargetName="PART_Indicator"
                                                 Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <SolidColorBrush>Transparent</SolidColorBrush>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Border x:Name="PART_Track" BorderThickness="1 0 1 0" BorderBrush="#BCBCBC"/>

                            <Border x:Name="PART_Indicator"
                                  CornerRadius="2"
                                  HorizontalAlignment="Left"
                                  Background="{TemplateBinding Foreground}"
                                  Margin="1 0 0 1">                
                                
                                <Grid ClipToBounds="True" x:Name="Animation">
                                    <Rectangle x:Name="PART_GlowRect"
                                     Width="140"
                                     HorizontalAlignment="Left"
                                     Fill="{DynamicResource ProgressBarIndicatorAnimatedFill}"
                                     Margin="-100,0,0,0" />
                                </Grid>
                                
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#E6E6E6"/>
            <Setter Property="Foreground" Value="#06B025"/>
            
        </Style>

            <!--#region Progress Bar Animation -->
            <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" StartPoint="0,0" EndPoint="1,0">
                <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#00ffffff"
                            Offset="0" />
                        <GradientStop Color="#50ffffff"
                            Offset="0.4" />
                        <GradientStop Color="#50ffffff"
                            Offset="0.6" />
                        <GradientStop Color="#00ffffff"
                            Offset="1" />
                    </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
            <!--#endregion-->

        <!--#endregion-->

    </Application.Resources>
</Application>